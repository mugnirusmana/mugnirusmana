{"ast":null,"code":"import{createSlice}from\"@reduxjs/toolkit\";import{AUTH}from\"./../services\";const initialState={data:{},isLoading:false,isError:false,isSuccess:false,errorMessage:null};export const forgotPasswordSlice=createSlice({name:\"forgotPassword\",initialState,reducers:{defaultForgotPasswordSlice:state=>{state.isLoading=false;state.isSuccess=false;state.isError=false;state.errorMessage=null;state.data={};},getForgotPasswordSlice:state=>{state.isLoading=true;state.isSuccess=false;state.isError=false;state.errorMessage=null;},getForgotPasswordSuccessSlice:state=>{state.isLoading=false;state.isSuccess=true;state.isError=false;state.errorMessage=null;},getForgotPasswordFailedSlice:(state,action)=>{var _action$payload,_action$payload2;state.isLoading=false;state.isSuccess=false;state.isError=true;state.errorMessage=action===null||action===void 0?void 0:(_action$payload=action.payload)===null||_action$payload===void 0?void 0:_action$payload.message;state.data=action===null||action===void 0?void 0:(_action$payload2=action.payload)===null||_action$payload2===void 0?void 0:_action$payload2.data;}}});export const{defaultForgotPasswordSlice,getForgotPasswordSlice,getForgotPasswordSuccessSlice,getForgotPasswordFailedSlice}=forgotPasswordSlice.actions;export const defaultForgotPassword=()=>{return async(dispatch,getState)=>{dispatch(defaultForgotPasswordSlice());};};export const submitForgotPassword=params=>{return async(dispatch,getState)=>{dispatch(getForgotPasswordSlice());return AUTH.forgotPassword(params).then(response=>{var _response$data,_response$data$meta;if(response!==null&&response!==void 0&&(_response$data=response.data)!==null&&_response$data!==void 0&&(_response$data$meta=_response$data.meta)!==null&&_response$data$meta!==void 0&&_response$data$meta.is_success){dispatch(getForgotPasswordSuccessSlice());}else{var _response$data$meta$m,_response$data2,_response$data2$meta,_response$data$data,_response$data3;const data={message:(_response$data$meta$m=response===null||response===void 0?void 0:(_response$data2=response.data)===null||_response$data2===void 0?void 0:(_response$data2$meta=_response$data2.meta)===null||_response$data2$meta===void 0?void 0:_response$data2$meta.message)!==null&&_response$data$meta$m!==void 0?_response$data$meta$m:'Oops! Someting went wrong',data:(_response$data$data=response===null||response===void 0?void 0:(_response$data3=response.data)===null||_response$data3===void 0?void 0:_response$data3.data)!==null&&_response$data$data!==void 0?_response$data$data:{}};dispatch(getForgotPasswordFailedSlice(data));}}).catch(error=>{var _error$response$data$,_error$response,_error$response$data,_error$response$data$2,_error$response$data$3,_error$response2,_error$response2$data;const data={message:(_error$response$data$=error===null||error===void 0?void 0:(_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:(_error$response$data$2=_error$response$data.meta)===null||_error$response$data$2===void 0?void 0:_error$response$data$2.message)!==null&&_error$response$data$!==void 0?_error$response$data$:'Oops! Someting went wrong',data:(_error$response$data$3=error===null||error===void 0?void 0:(_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.data)!==null&&_error$response$data$3!==void 0?_error$response$data$3:{}};dispatch(getForgotPasswordFailedSlice(data));});};};export default forgotPasswordSlice.reducer;","map":{"version":3,"names":["createSlice","AUTH","initialState","data","isLoading","isError","isSuccess","errorMessage","forgotPasswordSlice","name","reducers","defaultForgotPasswordSlice","state","getForgotPasswordSlice","getForgotPasswordSuccessSlice","getForgotPasswordFailedSlice","action","_action$payload","_action$payload2","payload","message","actions","defaultForgotPassword","dispatch","getState","submitForgotPassword","params","forgotPassword","then","response","_response$data","_response$data$meta","meta","is_success","_response$data$meta$m","_response$data2","_response$data2$meta","_response$data$data","_response$data3","catch","error","_error$response$data$","_error$response","_error$response$data","_error$response$data$2","_error$response$data$3","_error$response2","_error$response2$data","reducer"],"sources":["/var/www/html/fe/src/redux/forgotPasswordSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { AUTH } from \"./../services\";\n\nconst initialState = {\n  data: {},\n  isLoading: false,\n  isError: false,\n  isSuccess: false,\n  errorMessage: null\n};\n\nexport const forgotPasswordSlice = createSlice({\n  name: \"forgotPassword\",\n  initialState,\n  reducers: {\n    defaultForgotPasswordSlice: (state) => {\n      state.isLoading = false;\n      state.isSuccess = false;\n      state.isError = false;\n      state.errorMessage = null;\n      state.data = {}\n    },\n    getForgotPasswordSlice: (state) => {\n      state.isLoading = true;\n      state.isSuccess = false;\n      state.isError = false;\n      state.errorMessage = null;\n    },\n    getForgotPasswordSuccessSlice: (state) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.isError = false;\n      state.errorMessage = null;\n    },\n    getForgotPasswordFailedSlice: (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = false;\n      state.isError = true;\n      state.errorMessage = action?.payload?.message;\n      state.data = action?.payload?.data;\n    },\n  },\n});\n\nexport const { defaultForgotPasswordSlice, getForgotPasswordSlice, getForgotPasswordSuccessSlice, getForgotPasswordFailedSlice } = forgotPasswordSlice.actions;\n\nexport const defaultForgotPassword = () => {\n  return async (dispatch, getState) => {\n    dispatch(defaultForgotPasswordSlice());\n  };\n}\n\nexport const submitForgotPassword = (params) => {\n  return async (dispatch, getState) => {\n    dispatch(getForgotPasswordSlice());\n    return AUTH.forgotPassword(params)\n      .then((response) => {\n        if (response?.data?.meta?.is_success) {\n          dispatch(getForgotPasswordSuccessSlice());\n        } else {\n          const data = {\n            message: response?.data?.meta?.message??'Oops! Someting went wrong',\n            data: response?.data?.data??{},\n          }\n          dispatch(getForgotPasswordFailedSlice(data));\n        }\n      })\n      .catch((error) => {\n        const data = {\n          message: error?.response?.data?.meta?.message??'Oops! Someting went wrong',\n          data: error?.response?.data?.data??{},\n        }\n        dispatch(getForgotPasswordFailedSlice(data));\n      })\n  };\n}\n\nexport default forgotPasswordSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}